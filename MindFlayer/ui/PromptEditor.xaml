<Window
    x:Class="MindFlayer.PromptEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MindFlayer"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Prompt Editor"
    Width="800"
    Height="450"
    MinWidth="420"
    MinHeight="420"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    MouseDown="MainWindow_OnMouseDown"
    ResizeMode="CanResizeWithGrip"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStyle=""
    mc:Ignorable="d">
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <TreeView x:Name="treeView" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Headers}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:Header}" ItemsSource="{Binding Children}">
                    <CheckBox Content="{Binding Title}" IsChecked="{Binding Path=(local:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <!--  BasedOn="{StaticResource MaterialDesignCheckBox}"  -->

                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(local:ItemHelper.IsChecked)}" Value="False">
                                        <Setter Property="Foreground" Value="LightGray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </HierarchicalDataTemplate>
                <!--<DataTemplate DataType="{x:Type local:Header}" >
                    <CheckBox Content="{Binding Title}" IsChecked="{Binding Path=(local:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(local:ItemHelper.IsChecked)}" Value="False" >
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </DataTemplate>-->
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <TextBox
            x:Name="textBoxCrew"
            Grid.Row="0"
            Grid.Column="2"
            AcceptsReturn="True"
            SpellCheck.IsEnabled="True"
            TextWrapping="Wrap"
            VerticalScrollBarVisibility="Auto" />

        <DockPanel Grid.Row="2" Grid.Column="2">
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="150"
                Click="Button_Load_Click"
                Content="Load" />
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="150"
                Click="Button_Save_Click"
                Content="Save" />
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="150"
                Click="Button_Copy_Click"
                Content="Copy" />
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Click="Button_Refresh_Click"
                Content="Refresh" />
        </DockPanel>





    </Grid>
</Window>
