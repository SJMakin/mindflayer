<Window x:Class="MindFlayer.PromptEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MindFlayer"
        mc:Ignorable="d"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13" 
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" 
        Background="{DynamicResource MaterialDesignPaper}" 
        FontFamily="{DynamicResource MaterialDesignFont}" 
        ResizeMode="CanResizeWithGrip"
        WindowStyle="None" 
        MouseDown="MainWindow_OnMouseDown"
        MinHeight="420" MinWidth="420"
        Title="Prompt Editor" Height="450" Width="800">
   <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <TreeView x:Name="treeView" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Headers}">
                <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:Header}" ItemsSource="{Binding Children}" >
                    <CheckBox Content="{Binding Title}" IsChecked="{Binding Path=(local:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}" >
                                <!--BasedOn="{StaticResource MaterialDesignCheckBox}"-->
                                   
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(local:ItemHelper.IsChecked)}" Value="False" >
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </HierarchicalDataTemplate>
                    <!--<DataTemplate DataType="{x:Type local:Header}" >
                    <CheckBox Content="{Binding Title}" IsChecked="{Binding Path=(local:ItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(local:ItemHelper.IsChecked)}" Value="False" >
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </DataTemplate>-->
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        <TextBox Grid.Row="0" Grid.Column="2" x:Name="textBoxCrew" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" SpellCheck.IsEnabled="True"  />

        <DockPanel Grid.Row="2" Grid.Column="2">
            <Button Grid.Row="2" Grid.Column="0" Content="Load" Click="Button_Load_Click" Width="150" />
            <Button Grid.Row="2" Grid.Column="0" Content="Save" Click="Button_Save_Click" Width="150" />
            <Button Grid.Row="2" Grid.Column="0" Content="Copy" Click="Button_Copy_Click" Width="150" />
            <Button Grid.Row="2" Grid.Column="0" Content="Close" Click="Button_PrintCrew_Click" Width="150" HorizontalAlignment="Right" />
        </DockPanel>


        <Button Grid.Row="2" Grid.Column="0" Content="Refresh" Click="Button_PrintCrew_Click" />

   

    </Grid>
</Window>
