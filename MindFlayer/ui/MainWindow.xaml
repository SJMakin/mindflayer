<Window x:Class="MindFlayer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:MindFlayer"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
        TextElement.FontWeight="Regular" 
        TextElement.FontSize="13" 
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" 
        Background="{DynamicResource MaterialDesignPaper}" 
        FontFamily="{DynamicResource MaterialDesignFont}" 
        mc:Ignorable="d" 
        Title="Chat Dialog" 
        Height="500" 
        Width="700" 
        ResizeMode="CanResizeWithGrip" 
        AllowsTransparency="True" 
        WindowStyle="None" 
        MouseDown="MainWindow_OnMouseDown" 
        DataContext="{Binding ChatViewModel, Source={StaticResource Locator}}" 
        MinHeight="420" 
        MinWidth="420">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="CustomNavigationRailTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Setter Property="Height" Value="30" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing" DialogTheme="Inherit">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel Margin="16">
                <TextBlock Text="SETTINGS:" />
                <ComboBox materialDesign:HintAssist.Hint="Free text or select" materialDesign:HintAssist.HintOpacity=".26" SelectedValue="{Binding SelectedChatModel}" ItemsSource="{Binding ChatModels}" IsEditable="True"></ComboBox>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True" Margin="0 8 8 0" Content="ACCEPT" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                True

                            </system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" Margin="0 8 8 0" Content="CANCEL" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                                False

                            </system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" MinHeight="90" />
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0" Margin="0">
                <materialDesign:ColorZone Margin="0" Padding="2" Mode="PrimaryMid" DockPanel.Dock="Bottom">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Margin="16,0,0,0" ToolTip="Home" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Content="{materialDesign:PackIcon Kind=Settings, Size=24}" Style="{DynamicResource MaterialDesignToolButton}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        </StackPanel>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="True">
                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Light" Margin="0 0 10 0"/>
                                    <ToggleButton x:Name="DarkModeToggleButton" HorizontalAlignment="Center" Click="MenuDarkModeButton_Click" Grid.Column="1"/>
                                    <TextBlock Text="Dark" Margin="10 0 0 0" Grid.Column="2"/>
                                    <TextBlock Text="Temp" Margin="0 10 10 0" Grid.Row="1"/>
                                    <Slider x:Name="slVolume" HorizontalAlignment="Center" Width="40" Value="{Binding Temperature}" Maximum="2" Margin="0 10 10 0" Grid.Row="1" Grid.Column="1" />
                                    <TextBox Text="{Binding ElementName=slVolume, Path=Value, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Width="29" Height="22" TextWrapping="Wrap" Margin="10,0,0,0" Grid.Row="1" Grid.Column="2"/>
                                </Grid>
                                <Separator/>
                                <!--<Button Content="Nice Popup"/><Button Content="Can't Touch This" IsEnabled="False"/>-->
                                <!--<Separator/>-->
                                <Button Content="Prompts..." Click="PromptsButtonClickHandler_Click" />
                                <Button Content="Images..." Click="ImagesButtonClickHandler_Click" />
                                <Separator/>
                                <!--<Button Content="Nice Popup"/><Button Content="Can't Touch This" IsEnabled="False"/>-->
                                <!--<Separator/>-->
                                <Button Content="Quit" Click="CloseButtonClickHandler_Click" />
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" Text=""/>
                    </DockPanel>
                </materialDesign:ColorZone>
            </DockPanel>
            <TabControl Grid.Row="1" ItemsSource="{Binding Conversations}" SelectedItem="{Binding ActiveConversation}" Style="{StaticResource MaterialDesignNavigatilRailTabControl}" materialDesign:ShadowAssist.ShadowDepth="Depth4" materialDesign:ColorZoneAssist.Mode="Standard" SnapsToDevicePixels="True" BorderThickness="0" ItemContainerStyle="{StaticResource CustomNavigationRailTabItemStyle}" TabStripPlacement="Left" Height="auto">
                <TabControl.ItemTemplate>
                    <DataTemplate >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Name}"/>
                            <Button Grid.Column="1" Command="{Binding CloseTabCommand}" Visibility="{Binding ShowCloseButton}" Margin="0" Height="Auto">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Path Data="M0,0 L8,8 M8,0 L0,8" StrokeThickness="4" VerticalAlignment="Center" Margin="5,4,0,2">
                                            <Path.Style>
                                                <Style TargetType="{x:Type Path}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Stroke" Value="LightGray" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Stroke" Value="Black" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Grid.ContextMenu>
                                <ContextMenu Visibility="{Binding MessageButtonVisibility}">
                                    <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
                                    <MenuItem Header="Load" Command="{Binding LoadCommand}"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="local:Conversation">
                        <ScrollViewer Name="ScrollView" local:ScrollViewerAttachedProperties.ScrollToBottomOnChange="{Binding ChatMessages}" Background="{DynamicResource MaterialDesignPaper}">
                            <StackPanel x:Name="MessageContainer">
                                <ItemsControl ItemsSource="{Binding ChatMessages}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Padding="2" Margin="3">
                                                <Grid VerticalAlignment="Bottom">
                                                    <Grid.ColumnDefinitions></Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions></Grid.RowDefinitions>
                                                    <!--<Button Content="🍔" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Visibility="{Binding ChangePromptButtonVisibility}" Grid.Column="0" Grid.Row="1" Padding="0" Width="20" Height="20"/>-->
                                                    <!--BorderThickness="0"-->
                                                    <TextBox Background="Transparent" materialDesign:HintAssist.Hint="{Binding Role}" materialDesign:HintAssist.HelperText="{Binding TokenCount}" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding Content}" Grid.Column="0" Grid.RowSpan="2">
                                                        <materialDesign:HintAssist.HelperTextStyle>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignHelperTextBlock}">
                                                                <Setter Property="Foreground" Value="DimGray" />
                                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                                <Setter Property="FontSize" Value="7" />
                                                            </Style>
                                                        </materialDesign:HintAssist.HelperTextStyle>
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                                                                <Setter Property="SpellCheck.IsEnabled" Value="False" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsFocused" Value="True">
                                                                        <Setter Property="SpellCheck.IsEnabled" Value="True" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsFocused" Value="False">
                                                                        <Setter Property="SpellCheck.IsEnabled" Value="False" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                        <TextBox.ContextMenu>
                                                            <ContextMenu Visibility="{Binding MessageButtonVisibility}">
                                                                <MenuItem Header="Replay" Command="{Binding ReplayCommand}"/>
                                                                <MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
                                                            </ContextMenu>
                                                        </TextBox.ContextMenu>
                                                    </TextBox>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ScrollViewer>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
            <GridSplitter Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Width="60" Height="4">
                <GridSplitter.Template>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Button Content="---" />
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>
                </GridSplitter.Template>
            </GridSplitter>
            <Grid Margin="5" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding NewMessageContent, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Top" Padding="0" Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" SpellCheck.IsEnabled="True" Height="Auto">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding Path=SendMessageCommand}" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom">
                    <Button Command="{Binding RecordInputCommand}" Margin="2" Padding="1" Height="20">
                        <materialDesign:PackIcon Kind="Record" Height="Auto" Width="Auto" />
                    </Button>
                    <materialDesign:PopupBox PlacementMode="TopAndAlignRightEdges" ToolTip="Suggestions...">
                        <materialDesign:PopupBox.ToggleCheckedContent>
                            <materialDesign:PackIcon Kind="Pencil" Width="24" Height="24" />
                        </materialDesign:PopupBox.ToggleCheckedContent>
                        <ItemsControl ItemsSource="{Binding Suggestions}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Summary}" Command="{Binding DataContext.SetInputCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" CommandParameter="{Binding Text}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </materialDesign:PopupBox>
                    <Button Content="💌" Command="{Binding SendMessageCommand}" IsEnabled="{Binding SendEnabled}" Style="{DynamicResource MaterialDesignFlatDarkBgButton}" Margin="0" Width="50" Height="30" />
                </StackPanel>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>